local chestNames = {}
local dispenserName

-- Load existing user-defined names from file
local function loadNameMap()
    print("Loading user-defined names...")
    -- Add your existing loadNameMap code here
end

-- Save current user-defined names to file
local function saveNameMap()
    print("Saving user-defined names...")
    -- Add your existing saveNameMap code here
end

-- Function to create a unique key based on name, damage, and NBT
local function createUniqueKey(item)
    -- Add your existing createUniqueKey code here
end

-- Function to get or assign a user-defined name for an item
local function getOrAssignUserName(item)
    -- Add your existing getOrAssignUserName code here
end

-- Scan and find peripherals dynamically, including all chest types
local function findPeripherals()
    print("Scanning for peripherals...")
    chestNames = {}  -- Reset the list of chest names
    local peripherals = peripheral.getNames()
    for _, name in ipairs(peripherals) do
        local p = peripheral.wrap(name)
        if p and p.list then  -- Check for any inventory-like peripheral
            if name:find("dispenser") then
                dispenserName = name
                print("Dispenser found: " .. name)
            else
                table.insert(chestNames, name)
                print("Chest found: " .. name)
            end
        end
    end
    print("Peripherals scanning completed. Total chests found: " .. #chestNames)
end

-- Function to try and push items into a chest
local function tryPushToChest(dispenser, slot, count)
    for _, chestName in ipairs(chestNames) do
        local chest = peripheral.wrap(chestName)
        if chest then
            local moved = dispenser.pushItems(peripheral.getName(chest), slot, count)
            if moved > 0 then
                print("Moved " .. moved .. " items from dispenser to " .. chestName)
                return true
            end
        end
    end
    return false
end

-- Function to transfer items from dispenser to chest
local function transferItems()
    if dispenserName then
        print("Starting item transfer...")
        local dispenser = peripheral.wrap(dispenserName)
        
        if dispenser then
            -- Iterate through the dispenser slots
            for slot, item in pairs(dispenser.list()) do
                local success = tryPushToChest(dispenser, slot, item.count)
                if not success then
                    print("Failed to move item from dispenser to any chest. All chests might be full.")
                end
            end
        else
            print("Failed to wrap the dispenser.")
        end
    else
        print("Dispenser not found.")
    end
end

-- Function to update the item database by aggregating items from all inventories
local function updateDatabase()
    print("Updating item database...")
    itemDB = {}  -- Clear the database before updating
    for _, chest in pairs(chestNames) do
        local items = chest.list()
        for slot, item in pairs(items) do
            local userName = getOrAssignUserName(item)
            if not itemDB[userName] then
                itemDB[userName] = item.count
            else
                itemDB[userName] = itemDB[userName] + item.count
            end
        end
    end
    print("Item database updated.")
end

-- Function to display the aggregated items neatly on the terminal with pagination
local function displayItems()
    -- Add your existing displayItems code here
end

-- Main menu to navigate between different modes
local function mainMenu()
    while true do
        term.clear()
        term.setCursorPos(1, 1)
        print("=== Modular Storage System ===")
        print("1. View Items in Storage")
        print("2. Label Items & Drop into Dispenser")
        print("3. Transfer Items from Dispenser to Chests")
        print("4. Exit Program")
        print("\nSelect an option by typing the number and pressing Enter:")

        local choice = read()

        if choice == "1" then
            print("Option 1 selected: Viewing Items in Storage")
            updateDatabase()
            displayItems()
        elseif choice == "2" then
            print("Option 2 selected: Labeling Items & Dropping into Dispenser")
            -- Handle item scanning and dropping into the dispenser
            -- scanAndMapItems()
            -- dropItemsIntoDispenser()
        elseif choice == "3" then
            print("Option 3 selected: Transferring Items from Dispenser to Chests")
            findPeripherals()  -- Find and wrap all peripherals
            if dispenserName then
                transferItems()  -- Transfer items using pushItems
            else
                print("Dispenser not found. Cannot proceed.")
                sleep(2)
            end
        elseif choice == "4" then
            print("Option 4 selected: Exiting Program")
            term.clear()
            term.setCursorPos(1, 1)
            print("Exiting program. Goodbye!")
            break
        else
            print("Invalid choice. Please select a valid option.")
            sleep(2)
        end
    end
end

-- Main program
local function main()
    print("Starting program...")
    loadNameMap()
    findPeripherals()  -- Find all peripherals, including chests and dispenser
    mainMenu()
end

-- Run the program
main()
