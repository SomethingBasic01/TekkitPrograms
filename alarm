local G=true local f="config" local e={whitelist={},pulseMob=true,pulsePlayer=true,radarMode=false,discordEnabled=true,webhookURL="https://discord.com/api/webhooks/your_webhook_here",botName="Base Defence Bot",botAvatar=nil,discordChannel="your_channel_id_here",botToken="your_bot_token_here",origin={x=0,y=0,z=0},radarRotation=0,displayWhitelistedOnRadar=true} local function Q()if fs.exists(f)then local a=fs.open(f,"r")local b=a.readAll()a.close()local c=textutils.unserialize(b)if c then e=c end end end local function W()local a=fs.open(f,"w")a.write(textutils.serialize(e))a.close()end Q()local function T()local a=false if(not e.discordChannel or e.discordChannel==""or e.discordChannel=="your_channel_id_here")then a=true end if(not e.botToken or e.botToken==""or e.botToken=="your_bot_token_here")then a=true end if(not e.webhookURL or e.webhookURL==""or e.webhookURL=="https://discord.com/api/webhooks/your_webhook_here")then a=true end if a then print("=== Discord Setup ===")print("It seems this is your first time or config is incomplete.")print("Please enter your Discord channel ID, bot token, and webhook URL.\n")if(not e.discordChannel or e.discordChannel==""or e.discordChannel=="your_channel_id_here")then write("Enter your Discord channel ID: ")e.discordChannel=read()end if(not e.botToken or e.botToken==""or e.botToken=="your_bot_token_here")then write("Enter your Discord bot token: ")e.botToken=read()end if(not e.webhookURL or e.webhookURL==""or e.webhookURL=="https://discord.com/api/webhooks/your_webhook_here")then write("Enter your Discord webhook URL: ")e.webhookURL=read()end W()print("Settings saved. Restart if needed.\n")end end T()Q()local u=peripheral.find("manipulator")if not u then error("Cannot find manipulator")end if not u.hasModule("plethora:sensor")then error("Cannot find entity sensor module on the manipulator")end local function X()return u.sense()end local function Y(a)if a and a.id then return u.getMetaByID(a.id)end return nil end local L=peripheral.find("monitor")if not L then error("Monitor not found!")end if not redstone then error("Redstone API not available!")end local S=require("DiscordHook")local V,H=S.createWebhook(e.webhookURL)if not V then error("Webhook connection failed! Reason: "..H)end local function O(a)if e.discordEnabled then local b,c=pcall(function()H.send(a,e.botName,e.botAvatar)end)if G and not b then print("DEBUG: Error sending message to Discord: "..tostring(c))end end end local d nil local i="" local function M()while true do local a="https://discord.com/api/v9/channels/"..e.discordChannel.."/messages?limit=5"if i then a=a.."&after="..i end local b={["Authorization"]="Bot "..e.botToken,["User-Agent"]="DiscordBot (ComputerCraft, 1.0)"}local c=http.get(a,b)if c then local h=c.readAll()d=h c.close()local j,k=pcall(textutils.unserializeJSON,h)if j and type(k)=="table"then local l={}for m=#k,1,-1 do local n=k[m]if not n.author.bot then table.insert(l,n)end if(not i)or(tonumber(n.id)>tonumber(i))then i=n.id end end for _,o in ipairs(l)do local p=o.content:gsub("^%s*(.-)%s*$","%1")if G then print("DEBUG: Received Discord command -> ["..p.."]")end d(p,"discord")end else if G then print("DEBUG: Error decoding Discord response.")end end else if G then print("DEBUG: Failed to poll Discord messages.")end end sleep(3)end end local function R(a,b,c)return math.sqrt(a*a+b*b+c*c)end local function P(a)if a=="mob"and e.pulseMob then redstone.setOutput("left",true)sleep(0.5)redstone.setOutput("left",false)elseif a=="player"and e.pulsePlayer then redstone.setOutput("right",true)sleep(0.5)redstone.setOutput("right",false)end end local function N(a,b)local c,d=a:match("^(%S+)%s*(.*)$")c=c and c:lower()or""d=d or""if G then print("DEBUG: processCommand -> command=["..c.."], rest=["..d.."], source=["..b.."]")end if c=="addwhitelist"then if d~=""then e.whitelist[d]=true W()if b=="discord"then O("Whitelist updated: added "..d)end else print("Usage: addwhitelist <entityName>")end elseif c=="removewhitelist"then if d~=""then e.whitelist[d]=nil W()if b=="discord"then O("Whitelist updated: removed "..d)end else print("Usage: removewhitelist <entityName>")end elseif c=="togglepulse"then if d:lower()=="mob"then e.pulseMob=not e.pulseMob W()if b=="discord"then O("Mob pulse toggled: "..tostring(e.pulseMob))end elseif d:lower()=="player"then e.pulsePlayer=not e.pulsePlayer W()if b=="discord"then O("Player pulse toggled: "..tostring(e.pulsePlayer))end else print("Usage: togglepulse mob|player")end elseif c=="override"then if d:lower()=="mob"then P("mob")if b=="discord"then O("Manual override: mob pulse triggered")end elseif d:lower()=="player"then P("player")if b=="discord"then O("Manual override: player pulse triggered")end else print("Usage: override mob|player")end elseif c=="toggleradar"then e.radarMode=not e.radarMode W()if b=="discord"then O("Radar mode toggled: "..tostring(e.radarMode))end elseif c=="setorigin"then local x,y,z=d:match("^(%-?%d+)%s+(%-?%d+)%s+(%-?%d+)$")if x and y and z then e.origin={x=tonumber(x),y=tonumber(y),z=tonumber(z)}W()if b=="discord"then O("Origin updated to: ("..x..", "..y..", "..z..")")end else print("Usage: setorigin <x> <y> <z>")end elseif c=="setrotation"then local r=tonumber(d)if r and(r==0 or r==90 or r==180 or r==270)then e.radarRotation=r W()if b=="discord"then O("Radar rotation updated to: "..r.." degrees")end else print("Usage: setrotation <0|90|180|270>")end elseif c=="setwebhook"then if d~=""then e.webhookURL=d W()local s,t=S.createWebhook(e.webhookURL)if s then H=t if b=="discord"then O("Webhook URL updated.")end end else print("Usage: setwebhook <url>")end elseif c=="setbotname"then if d~=""then e.botName=d W()if b=="discord"then O("Bot name updated to: "..d)end else print("Usage: setbotname <name>")end elseif c=="listsensor"then local h=X()local j=textutils.serialize(h)if b=="discord"then O("Sensor Data: "..j)else print("Sensor Data:")print(j)end elseif c=="listsensormeta"then local h=X()local j=""for m,n in ipairs(h)do local z=Y(n)j=j..("Entity "..m..":\n")if z then j=j..(textutils.serialize(z).."\n")else j=j.."No meta data.\n"end end if b=="discord"then O("Sensor Meta:\n"..j)else print(j)end elseif c=="debugdiscord"then if b=="discord"then local h=d:sub(1,512)O("Full Discord Raw JSON (first 512 chars): "..h)else print("Local debugdiscord requested.")print("Full Discord Raw JSON:")print(d)end else print("Unknown command: "..a)end end d=N local function E()while true do local a=X()local b={}local c={}for _,v in ipairs(a)do local w=v.name or v.type or"Unknown"local x=v.x or 0 local y=v.y or 0 local z=v.z or 0 local A=R(x,y,z)local B=e.origin.x+x local C=e.origin.y+y local D=e.origin.z+z local meta=Y(v)local F="mob"if meta and meta.food and type(meta.food.hunger)=="number"then F="player"end if not e.whitelist[w]then local str=string.format("%s at (%d, %d, %d) - %.1f blocks away.",w,B,C,D,A)O(str)table.insert(b,{name=w,worldX=B,worldY=C,worldZ=D,distance=A})P(F)end table.insert(c,{name=w,x=B,z=D})end L.clear()L.setCursorPos(1,1)L.write("Entity Alert System")if not e.radarMode then local l=2 for _,k in ipairs(b)do L.setCursorPos(1,l)local str=string.format("%s: (%d,%d,%d) %.1f blocks",k.name,k.worldX,k.worldY,k.worldZ,k.distance)L.write(str)l=l+1 end else local w,h=L.getSize()local cx,cy=math.floor(w/2),math.floor(h/2)L.clear()L.setCursorPos(cx,cy)L.write("O")for _,k in ipairs(c)do local dx=k.x-e.origin.x local dz=k.z-e.origin.z local rx,rz=dx,dz if e.radarRotation==90 then rx,rz=dz,-dx elseif e.radarRotation==180 then rx,rz=-dx,-dz elseif e.radarRotation==270 then rx,rz=-dz,dx end local xx=cx+math.floor(rx)local yy=cy+math.floor(rz)if xx>=1 and xx<=w and yy>=1 and yy<=h then L.setCursorPos(xx,yy)local sym="*"if e.whitelist[k.name]then sym="W"end L.write(sym)end end end sleep(1)end end parallel.waitForAny(function()while true do term.write("> ")local a=read()d(a,"local")end, M,E)
